// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParticipantDatabse.Models;

namespace ParticipantDatabse.Migrations
{
    [DbContext(typeof(ParticipantDatabaseContext))]
    partial class ParticipantDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ParticipantDatabse.Models.Assistant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("FirstName");

                    b.Property<int?>("GroupId");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.Property<int?>("StudyParticipationId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudyParticipationId");

                    b.ToTable("Assistant");
                });

            modelBuilder.Entity("ParticipantDatabse.Models.Investigator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("FirstName");

                    b.Property<int?>("GroupId");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.Property<int?>("StudyParticipationId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudyParticipationId");

                    b.ToTable("Investigator");
                });

            modelBuilder.Entity("ParticipantDatabse.Models.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActualDueDate");

                    b.Property<string>("Address");

                    b.Property<string>("AlternateName");

                    b.Property<string>("AlternativePhoneNumber");

                    b.Property<string>("Code");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email");

                    b.Property<int>("EthnicityOfChild");

                    b.Property<int>("EthnicityOfFather");

                    b.Property<int>("EthnicityOfMother");

                    b.Property<string>("EveningPhoneNumber");

                    b.Property<string>("FirstName");

                    b.Property<int?>("GroupId");

                    b.Property<string>("LastName");

                    b.Property<string>("MobilePhoneNumber");

                    b.Property<string>("Parents");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Recruitment");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Participant");
                });

            modelBuilder.Entity("ParticipantDatabse.Models.ResearchGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("ResearchGroup");
                });

            modelBuilder.Entity("ParticipantDatabse.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("FirstName");

                    b.Property<int?>("GroupId");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.Property<int?>("StudyParticipationId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudyParticipationId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("ParticipantDatabse.Models.Study", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int?>("GroupId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Study");
                });

            modelBuilder.Entity("ParticipantDatabse.Models.StudyParticipation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ParticipantId");

                    b.Property<int>("Status");

                    b.Property<int?>("StudyId");

                    b.HasKey("Id");

                    b.HasIndex("ParticipantId");

                    b.HasIndex("StudyId");

                    b.ToTable("StudyParticipation");
                });

            modelBuilder.Entity("ParticipantDatabse.Models.StudyTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("StudyTask");
                });

            modelBuilder.Entity("ParticipantDatabse.Models.StudyVisit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ParticipantId");

                    b.Property<int?>("StudyId");

                    b.Property<int?>("StudyParticipationId");

                    b.Property<DateTime>("VisitDate");

                    b.HasKey("Id");

                    b.HasIndex("ParticipantId");

                    b.HasIndex("StudyId");

                    b.HasIndex("StudyParticipationId");

                    b.ToTable("StudyVisit");
                });

            modelBuilder.Entity("ParticipantDatabse.Models.StudyVisitTask", b =>
                {
                    b.Property<int>("StudyTaskId");

                    b.Property<int>("StudyVisitId");

                    b.HasKey("StudyTaskId", "StudyVisitId");

                    b.HasIndex("StudyVisitId");

                    b.ToTable("StudyVisitTask");
                });

            modelBuilder.Entity("ParticipantDatabse.Models.Assistant", b =>
                {
                    b.HasOne("ParticipantDatabse.Models.ResearchGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("ParticipantDatabse.Models.StudyParticipation")
                        .WithMany("Assistants")
                        .HasForeignKey("StudyParticipationId");
                });

            modelBuilder.Entity("ParticipantDatabse.Models.Investigator", b =>
                {
                    b.HasOne("ParticipantDatabse.Models.ResearchGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("ParticipantDatabse.Models.StudyParticipation")
                        .WithMany("Investigators")
                        .HasForeignKey("StudyParticipationId");
                });

            modelBuilder.Entity("ParticipantDatabse.Models.Participant", b =>
                {
                    b.HasOne("ParticipantDatabse.Models.ResearchGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("ParticipantDatabse.Models.Student", b =>
                {
                    b.HasOne("ParticipantDatabse.Models.ResearchGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("ParticipantDatabse.Models.StudyParticipation")
                        .WithMany("Students")
                        .HasForeignKey("StudyParticipationId");
                });

            modelBuilder.Entity("ParticipantDatabse.Models.Study", b =>
                {
                    b.HasOne("ParticipantDatabse.Models.ResearchGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("ParticipantDatabse.Models.StudyParticipation", b =>
                {
                    b.HasOne("ParticipantDatabse.Models.Participant", "Participant")
                        .WithMany()
                        .HasForeignKey("ParticipantId");

                    b.HasOne("ParticipantDatabse.Models.Study", "Study")
                        .WithMany()
                        .HasForeignKey("StudyId");
                });

            modelBuilder.Entity("ParticipantDatabse.Models.StudyVisit", b =>
                {
                    b.HasOne("ParticipantDatabse.Models.Participant", "Participant")
                        .WithMany()
                        .HasForeignKey("ParticipantId");

                    b.HasOne("ParticipantDatabse.Models.Study", "Study")
                        .WithMany()
                        .HasForeignKey("StudyId");

                    b.HasOne("ParticipantDatabse.Models.StudyParticipation")
                        .WithMany("Visits")
                        .HasForeignKey("StudyParticipationId");
                });

            modelBuilder.Entity("ParticipantDatabse.Models.StudyVisitTask", b =>
                {
                    b.HasOne("ParticipantDatabse.Models.StudyTask", "StudyTask")
                        .WithMany("Visits")
                        .HasForeignKey("StudyTaskId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ParticipantDatabse.Models.StudyVisit", "StudyVisit")
                        .WithMany("Tasks")
                        .HasForeignKey("StudyVisitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
